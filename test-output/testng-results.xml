<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="216781" started-at="2020-11-28T21:45:03 CET" finished-at="2020-11-28T21:48:40 CET">
    <groups>
    </groups>
    <test name="Default test" duration-ms="216781" started-at="2020-11-28T21:45:03 CET" finished-at="2020-11-28T21:48:40 CET">
      <class name="tests.RegistrationTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.RegistrationTest@3fd7a715]" name="beforeClass" is-config="true" duration-ms="6104" started-at="2020-11-28T21:45:03 CET" finished-at="2020-11-28T21:45:09 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="RegistrationCancelStepOne()[pri:0, instance:tests.RegistrationTest@3fd7a715]" name="RegistrationCancelStepOne" duration-ms="33736" started-at="2020-11-28T21:45:10 CET" finished-at="2020-11-28T21:45:43 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationCancelStepOne -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTest@3fd7a715]" name="afterMethod" is-config="true" duration-ms="4279" started-at="2020-11-28T21:45:43 CET" finished-at="2020-11-28T21:45:48 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegistrationCancelStepOne status=SUCCESS method=RegistrationTest.RegistrationCancelStepOne()[pri:0, instance:tests.RegistrationTest@3fd7a715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="RegistrationBackButton()[pri:1, instance:tests.RegistrationTest@3fd7a715]" name="RegistrationBackButton" duration-ms="6228" started-at="2020-11-28T21:45:48 CET" finished-at="2020-11-28T21:45:54 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationBackButton -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTest@3fd7a715]" name="afterMethod" is-config="true" duration-ms="2079" started-at="2020-11-28T21:45:54 CET" finished-at="2020-11-28T21:45:56 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegistrationBackButton status=SUCCESS method=RegistrationTest.RegistrationBackButton()[pri:1, instance:tests.RegistrationTest@3fd7a715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="RegistrationCancelStepTwo()[pri:2, instance:tests.RegistrationTest@3fd7a715]" name="RegistrationCancelStepTwo" duration-ms="10158" started-at="2020-11-28T21:45:56 CET" finished-at="2020-11-28T21:46:06 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationCancelStepTwo -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTest@3fd7a715]" name="afterMethod" is-config="true" duration-ms="4422" started-at="2020-11-28T21:46:06 CET" finished-at="2020-11-28T21:46:10 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegistrationCancelStepTwo status=SUCCESS method=RegistrationTest.RegistrationCancelStepTwo()[pri:2, instance:tests.RegistrationTest@3fd7a715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="RegistrationTestStep1()[pri:3, instance:tests.RegistrationTest@3fd7a715]" name="RegistrationTestStep1" duration-ms="33550" started-at="2020-11-28T21:46:10 CET" finished-at="2020-11-28T21:46:44 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationTestStep1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTest@3fd7a715]" name="afterMethod" is-config="true" duration-ms="3199" started-at="2020-11-28T21:46:44 CET" finished-at="2020-11-28T21:46:47 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegistrationTestStep1 status=SUCCESS method=RegistrationTest.RegistrationTestStep1()[pri:3, instance:tests.RegistrationTest@3fd7a715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="RegistrationBookingForMyself()[pri:4, instance:tests.RegistrationTest@3fd7a715]" name="RegistrationBookingForMyself" duration-ms="18951" started-at="2020-11-28T21:46:47 CET" finished-at="2020-11-28T21:47:06 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationBookingForMyself -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTest@3fd7a715]" name="afterMethod" is-config="true" duration-ms="2670" started-at="2020-11-28T21:47:06 CET" finished-at="2020-11-28T21:47:09 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegistrationBookingForMyself status=SUCCESS method=RegistrationTest.RegistrationBookingForMyself()[pri:4, instance:tests.RegistrationTest@3fd7a715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="RegistrationBookingForSomeoneElse()[pri:5, instance:tests.RegistrationTest@3fd7a715]" name="RegistrationBookingForSomeoneElse" duration-ms="40723" started-at="2020-11-28T21:47:09 CET" finished-at="2020-11-28T21:47:50 CET">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*/bnm-paper/h1"}
  (Session info: chrome=87.0.4280.66)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-INGR77R', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\jovan\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:49597}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: f7a2dda77ddd47b0e468c384ee6d450c
*** Element info: {Using=xpath, value=//*/bnm-paper/h1}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*/bnm-paper/h1"}
  (Session info: chrome=87.0.4280.66)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-INGR77R', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\jovan\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:49597}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: f7a2dda77ddd47b0e468c384ee6d450c
*** Element info: {Using=xpath, value=//*/bnm-paper/h1}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at pages.MessagesPage.getRegisterMessage(MessagesPage.java:27)
at tests.RegistrationTest.RegistrationBookingForSomeoneElse(RegistrationTest.java:138)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationBookingForSomeoneElse -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTest@3fd7a715]" name="afterMethod" is-config="true" duration-ms="3532" started-at="2020-11-28T21:47:50 CET" finished-at="2020-11-28T21:47:53 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegistrationBookingForSomeoneElse status=FAILURE method=RegistrationTest.RegistrationBookingForSomeoneElse()[pri:5, instance:tests.RegistrationTest@3fd7a715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="RegistrationBookingForBoth()[pri:6, instance:tests.RegistrationTest@3fd7a715]" name="RegistrationBookingForBoth" duration-ms="41306" started-at="2020-11-28T21:47:53 CET" finished-at="2020-11-28T21:48:34 CET">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=87.0.4280.66)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-INGR77R', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\jovan\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:49597}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: f7a2dda77ddd47b0e468c384ee6d450c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=87.0.4280.66)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-INGR77R', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\jovan\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:49597}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: f7a2dda77ddd47b0e468c384ee6d450c
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.clear(RemoteWebElement.java:124)
at pages.RegistrationPage.bookingForSomeoneElse(RegistrationPage.java:362)
at pages.RegistrationPage.bookingForBoth(RegistrationPage.java:399)
at tests.RegistrationTest.RegistrationBookingForBoth(RegistrationTest.java:159)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationBookingForBoth -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTest@3fd7a715]" name="afterMethod" is-config="true" duration-ms="3204" started-at="2020-11-28T21:48:34 CET" finished-at="2020-11-28T21:48:38 CET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RegistrationBookingForBoth status=FAILURE method=RegistrationTest.RegistrationBookingForBoth()[pri:6, instance:tests.RegistrationTest@3fd7a715] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:tests.RegistrationTest@3fd7a715]" name="afterClass" is-config="true" duration-ms="2519" started-at="2020-11-28T21:48:38 CET" finished-at="2020-11-28T21:48:40 CET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- tests.RegistrationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
